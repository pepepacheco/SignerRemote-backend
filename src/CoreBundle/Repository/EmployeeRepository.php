<?php

namespace CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EmployeeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmployeeRepository extends EntityRepository
{
    public function findAllByUser($user)
    {
        $sql = $this->createQueryBuilder('e');
        $sql
            ->andWhere('e.user = :user')
            ->setParameter('user', $user);

        $query = $sql->getQuery();

        return $query->getResult();
    }

    public function findOneByLogin($email,$password)
    {
        $sql = $this->createQueryBuilder('e');
        $sql
            ->andWhere('e.email = :email')
            ->setParameter('email', $email)
            ->andWhere('e.password = :password')
            ->setParameter('password', $password);
        $query = $sql->getQuery();
        return $query->getOneOrNullResult();
    }

    public function findActivated($user) {
        $sql = $this->createQueryBuilder('e');
        $sql
            ->andWhere('e.active = true')
            ->andWhere('e.user = :user')
            ->setParameter('user', $user);

        $query = $sql->getQuery();

        return $query->getResult();
    }

    public function findByEmailAndPassword($email, $password) {
        $sql = $this->createQueryBuilder('e');
        $sql
            ->andWhere('e.email = :email')
            ->andWhere('e.password = :password')
            ->setParameter('email', $email)
            ->setParameter('password', $password);

        $query = $sql->getQuery();

        return $query->getOneOrNullResult();
    }

    public function findDesactivated($user) {
        $sql = $this->createQueryBuilder('e');
        $sql
            ->andWhere('e.active = false')
            ->andWhere('e.user = :user')
            ->setParameter('user', $user);

        $query = $sql->getQuery();

        return $query->getResult();
    }

    public function findById($user, $id) {
        $sql = $this->createQueryBuilder('e');
        $sql
            ->andWhere('e.id = :id')
            ->andWhere('e.user = :user')
            ->setParameter('user', $user)
            ->setParameter('id', $id);

        $query = $sql->getQuery();

        return $query->getOneOrNullResult();
    }

    public function findByEmailAndUser($user, $email) {
        $sql = $this->createQueryBuilder('e');
        $sql
            ->andWhere('e.email = :email')
            ->andWhere('e.user = :user')
            ->setParameter('user', $user)
            ->setParameter('email', $email);

        $query = $sql->getQuery();

        return $query->getOneOrNullResult();
    }

    public function findByEmail($email) {
        $sql = $this->createQueryBuilder('e');
        $sql
            ->andWhere('e.email = :email')
            ->setParameter('email', $email);

        $query = $sql->getQuery();

        return $query->getOneOrNullResult();
    }
}
